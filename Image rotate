
/*
You are given an n x n 2D matrix representing an image.

Rotate the image by 90 degrees (clockwise).

Follow up:
Could you do this in-place?

*/

#include <iostream>     // std::cout
#include <algorithm>    // std::reverse

class Solution {
public:
    void rotate(vector<vector<int> > &matrix) {
        int n = matrix.size();
        int temp;
        for(int i=0; i<n; i++ ){
            for (int j=i+1; j<n; j++ ){
                temp= matrix[i][j];
                matrix[i][j] = matrix[j][i];
                matrix[j][i] = temp;
            }
        }
        for(int k=0;k<n;k++){
            std::reverse(matrix[k].begin(),matrix[k].end());
        }
        
    }
};
