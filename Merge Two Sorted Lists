/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *mergeTwoLists(ListNode *l1, ListNode *l2) {
        if(l1 == NULL) return l2;
        if(l2 == NULL) return l1;

        
       
        ListNode *newhead = (l1->val > l2->val)? l2: l1;
        ListNode *res = newhead;
        
        ListNode *p,*q;
        if (newhead == l1) p = l1->next; else p = l1;
        if (newhead == l2) q = l2->next; else q = l2;

        
        while (p != NULL && q!= NULL)
        {
            if (p->val>q->val){
                res->next = q;
                res = res->next;
                q=q->next;
            }else{
                res->next = p;
                res = res->next;
                p=p->next;
            }
        }
        if(p == NULL) res ->next = q; else res->next =p;
        
        return newhead;
        
        
    }
};
