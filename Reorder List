/*
Given a singly linked list L: L0→L1→…→Ln-1→Ln,
reorder it to: L0→Ln→L1→Ln-1→L2→Ln-2→…

You must do this in-place without altering the nodes' values.

For example,
Given {1,2,3,4}, reorder it to {1,4,2,3}.
*/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    void reorderList(ListNode *head) {
        if(head == NULL || head->next ==NULL) return;
        ListNode* tail = head;
        ListNode* pre = head;
       
        while(true)  //指针跑步法  
        {
            tail = tail->next;
            if(tail == NULL) break;
            tail= tail->next;
            if(tail == NULL) break;
            pre = pre->next;
        }
        if(pre == head) return;
        
       
        ListNode* begin = pre->next;
        ListNode* preBegin = NULL;
        pre->next = NULL;
        
        
        while(begin!=NULL)
        {
            ListNode* temp = begin->next;
            begin->next = preBegin;
            preBegin = begin;
            begin = temp; 
        }

         ListNode* first = head;
         ListNode* second = preBegin;
         while(second!=NULL && first!= NULL)
         {
             ListNode* temp = second->next;
             second->next = first->next;
             first->next = second;
             first = second ->next;
             second = temp;
         }

     
        
    }
};
