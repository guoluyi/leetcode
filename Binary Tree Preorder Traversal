/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> preorderTraversal(TreeNode *root) {
        stack<TreeNode*> tStack;  
        vector<int> res;
        vector<int> stack;
        if(root == NULL) return res;
        while(root!=NULL || tStack.size() > 0)
        {
            if(root !=NULL)
            {
                res.push_back(root->val);
                if(root->right != NULL) tStack.push(root->right);
                root = root->left;
            }else{
                root = tStack.top();
                tStack.pop();
            }
        }
        return res;
   
    }
};

//总而言之，push到stack的一定是右边的非空的，等待遍历
